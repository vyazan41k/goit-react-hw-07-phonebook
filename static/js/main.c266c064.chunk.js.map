{"version":3,"sources":["redux/contacts/contacts-actoins.js","redux/contacts/contacts-operations.js","components/Form/Form.js","redux/contacts/contacts-selectors.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["loadContactRequest","createAction","loadContactSuccess","loadContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","axios","defaults","baseURL","text","dispatch","contact","name","number","post","then","data","catch","error","id","delete","get","Form","state","inputFormChange","event","currentTarget","value","setState","formSubmit","e","preventDefault","props","contacts","items","find","alert","onSubmit","this","type","onChange","Component","connect","contactsOperations","getValueFilter","filter","getFilterContacts","createSelector","normalFilter","toLowerCase","includes","getLoader","loading","selectors","deleteContact","map","onClick","App","loadContacts","loader","size","color","margin","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c266c064.chunk.js","sourcesContent":["// import shortid from \"shortid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const loadContactRequest = createAction(\"contacts/loadContactRequest\");\nexport const loadContactSuccess = createAction(\"contacts/loadContactSuccess\");\nexport const loadContactError = createAction(\"contacts/loadContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const filterContacts = createAction(\"contacts/filter\");\n","import axios from \"axios\";\r\nimport {\r\n  loadContactRequest,\r\n  loadContactSuccess,\r\n  loadContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./contacts-actoins\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\n\r\nconst loadContacts = () => (dispatch) => {\r\n  dispatch(loadContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(loadContactSuccess(data)))\r\n    .catch((error) => dispatch(loadContactError(error)));\r\n};\r\n\r\nconst addContact = (text) => (dispatch) => {\r\n  const contact = {\r\n    name: text.name,\r\n    number: text.number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { addContact, deleteContact, loadContacts };\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\n// import selectors from \"../../redux/contacts/contacts-selectors\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  inputFormChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n\n    if (name || number) {\n      const duplicate = this.props.contacts.items.find(\n        (contact) => contact.name === name\n      );\n\n      duplicate\n        ? alert(`${this.state.name} is already in contacts.`)\n        : this.props.onSubmit(this.state);\n\n      this.setState({ name: \"\", number: \"\" });\n    } else {\n      alert(\"No field is filled\");\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.formSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.inputFormChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.inputFormChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (text) => dispatch(contactsOperations.addContact(text)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import { createSelector } from \"reselect\";\r\n\r\nconst getLoader = (state) => state.contacts.loading;\r\n\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getValueFilter = (state) => state.contacts.filter;\r\n\r\nconst getFilterContacts = createSelector(\r\n  [getAllContacts, getValueFilter],\r\n  (contacts, filter) => {\r\n    const normalFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getLoader,\r\n  getValueFilter,\r\n  getFilterContacts,\r\n  getFilterContacts,\r\n};\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterContacts } from \"../../redux/contacts/contacts-actoins\";\nimport selectors from \"../../redux/contacts/contacts-selectors\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      <h2>Find contacts by name</h2>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: selectors.getValueFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(filterContacts(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\nimport selectors from \"../../redux/contacts/contacts-selectors\";\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button onClick={() => deleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getFilterContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport ContactsList from \"./components/ContactsList\";\nimport contactsOperations from \"./redux/contacts/contacts-operations\";\nimport selectors from \"./redux/contacts/contacts-selectors\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.loadContacts();\n  }\n  render() {\n    return (\n      <div>\n        <h3>Phonebook</h3>\n        <Form />\n        <h3>Contacts</h3>\n        <Filter />\n\n        {this.props.loader ? (\n          <PulseLoader size={15} color={\"#36D7B7\"} margin={5} />\n        ) : (\n          <ContactsList />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loader: selectors.getLoader(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadContacts: () => dispatch(contactsOperations.loadContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport {\n  loadContactRequest,\n  loadContactSuccess,\n  loadContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n} from \"./contacts-actoins\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nconst items = createReducer([], {\n  [loadContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [loadContactRequest]: () => true,\n  [loadContactSuccess]: () => false,\n  [loadContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}